subprojects {
    apply plugin: 'visual-studio'
    
    model {
        visualStudio {
            projects.all {
                projectFile.withXml {
                    asNode().PropertyGroup.findAll({ it.@Label == 'NMakeConfiguration' }).each {
                        asNode().appendNode('ItemDefinitionGroup', [Condition: it.@Condition])
                            .appendNode('Link').appendNode('SubSystem', 'Console');
                    }
                }
            }
        }
    }
    
    plugins.withType(CppPlugin) {
        binaries.all {
            cppCompiler.args '/EHsc'
        }
        
        binaries.withType(NativeExecutableBinarySpec).matching({it.component.name.endsWith("Test")}).all {
            cppCompiler.define "GTEST_LANG_CXX11", "1"
            linker.args '/SUBSYSTEM:CONSOLE'
        }
    }
    
    def addCompilerFlag = { NativeBinarySpec binary, String flag ->
        if (binary.hasProperty("cppCompiler")) {
            binary.cppCompiler.args flag
        }
        if (binary.hasProperty("cCompiler")) {
            binary.cCompiler.args flag
        }
    }
    
    plugins.matching({it instanceof CppPlugin || it instanceof CPlugin}).all {
        binaries.all {
            if (buildType.debug) {
                addCompilerFlag it, '/Zi'
                linker.args '/DEBUG'
            } else {
                linker.args '/RELEASE'
            }
        }
    }
    
    plugins.withType(NativeComponentModelPlugin) {
        model {
            buildTypes {
                debug {
                    ext.debug = true;
                }
                release {
                    ext.debug = false;
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3-20141212230053+0000'
}

